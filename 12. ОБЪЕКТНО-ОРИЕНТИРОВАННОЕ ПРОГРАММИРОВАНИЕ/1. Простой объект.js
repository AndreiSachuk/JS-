var dog = {
    name: "Оладушек",
    legs: 4,
    isAwesome: true
    };

/*Доступ к значениям внутри объектов»*/
dog.name;
//    "Оладушек"

/*добавлять объекту новые свойства*/
dog.age = 6;

dog;
//Object {name: "Оладушек", legs: 4, isAwesome: true, age: 6}

/*Помимо строк, чисел и булевых значений в свойствах объектов можно хранить функции — тогда эти свойства называют методами.*/

/*Один из способов — воспользоваться точечной нотацией. К примеру, научим нашу собаку лаять, добавив к объекту dog метод под названием bark:*/
dog.bark = function () {
    console.log("Гав-гав! Меня зовут " + this.name + "!");
};
dog.bark();

/*Ключевое слово this можно использовать в теле метода, чтобы обратиться к объекту, для которого этот метод вызывается. Например, при
вызове метода bark для объекта dog, this обозначает объект dog, а значит this.name — это свойство dog.name. Ключевое слово this делает
методы более гибкими, позволяя добавлять один и тот же метод ко многим объектам так, чтобы он имел доступ к свойствам того объекта, для
которого в данный момент вызывается.*/


var speak = function () {
    console.log(this.sound + "! Меня зовут " + this.name + "!");
};

var cat = {
    sound: "Мяу",
    name: "Варежка",
    speak: speak
};

cat.speak();
/*Мяу! Меня зовут Варежка!*/