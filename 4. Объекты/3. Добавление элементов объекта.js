/*Пустой объект похож на пустой массив, только вместо квадратных скобок при его создании используются фигурные:*/

var object = {};

/* Добавлять элементы объекта можно так же, как элементы массива, — но используя строки вместо чисел:*/
var cat = {};
cat["legs"] = 3;
cat["name"] = "Гармония";
cat["color"] = "Черепаховый";
cat;
//{ color: "Черепаховый", legs: 3, name: "Гармония" }

/*В массивах элементы расположены строго один за другим: индекс 0 перед индексом 1, индекс 3 после индекса 2; однако в случае объектов
неясно, как расположить элементы друг относительно друга. Должен ли ключ color стоять перед legs или после? «Правильного» ответа на этот
вопрос нет, поэтому объекты хранят свои ключи без конкретной очеред ности, в результате чего разные браузеры показывают ключи в разном
порядке. Так что никогда не полагайтесь в своих программах на тот или иной порядок ключей.*/

/*Новые ключи также можно добавлять через точечную нотацию. Давайте перепишем этим способом предыдущий пример, то есть создадим пустой
объект и заполним его данными:*/
var cat = {};
cat.legs = 3;
cat.name = "Гармония";
cat.color = "Черепаховый";

/*Если обратиться к несуществующему свойству объекта, JavaScript вернет специальное значение undefi ned, сообщая таким образом: «здесь
ничего нет». Например:*/

var dog = {
    name: "Оладушек",
    legs: 4,
    isAwesome: true
    };
dog.isBrown;
//undefined
/*Здесь мы определили три свойства объекта dog: name, legs и isAwesome. Свойства isBrown среди них нет, поэтому dog.isBrown возвращает undefined.*/